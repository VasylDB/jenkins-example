name: Jenkins-like Pipeline (matrix)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  preparation:
    runs-on: ubuntu-latest
    outputs:
      run_id: ${{ steps.prep.outputs.run_id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate RunID and prep.txt (Preparation)
        id: prep
        shell: bash
        run: |
          RUN_ID=$(uuidgen)
          echo "Preparation stage: RunID=${RUN_ID}"
          echo "Build Number: ${GITHUB_RUN_NUMBER}"
          printf "RunID=%s\n" "$RUN_ID" | tee prep.txt
          echo "run_id=$RUN_ID" >> "$GITHUB_OUTPUT"

      - name: Stash prepData (upload artifact)
        uses: actions/upload-artifact@v4
        with:
          name: prepData
          path: prep.txt
          if-no-files-found: error
          retention-days: 7

  run-jobs:
    runs-on: ubuntu-latest
    needs: [preparation]
    strategy:
      fail-fast: false
      matrix:
        name: [JobA, JobB, JobC]
    steps:
      - uses: actions/checkout@v4

      - name: Unstash prepData
        uses: actions/download-artifact@v4
        with:
          name: prepData

      - name: Run ${{ matrix.name }} (produce log)
        shell: bash
        run: |
          echo "${{ matrix.name }} ru
